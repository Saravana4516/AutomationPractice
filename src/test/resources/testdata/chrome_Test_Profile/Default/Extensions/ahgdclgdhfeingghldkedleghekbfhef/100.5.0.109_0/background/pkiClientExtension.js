"undefined"==typeof pkiClientExtension&&(pkiClientExtension={});(function(){var b={};pkiClientExtension.common=b;b.DOM_ID="__symantecPKIClientMessenger";b.EVENT_REQUEST="SymantecPKIClientMessage";b.EVENT_RESPONSE="SymantecPKIClientMessageResponse"})();
(function(){var b=[];pkiClientExtension.handlers=b;var d=function(c){console.debug("+MessageHandler(",c,")");this.url=c};pkiClientExtension.commonMessenger={};pkiClientExtension.commonMessenger.MessageHandler=d;d.prototype={processMessage:function(c){return this.__handleMessage(c.method,c.params).then(function(a){return{jsonrpc:"2.0",id:c.id,result:a}})["catch"](function(a){return{jsonrpc:"2.0",id:c.id,error:{code:-32603,message:a.message||a.detail||a.shortform||""+a,data:a}}})},__handleMessage:function(c,
a){console.debug("MessageHandler(",this,").__handleMessage(",c,a,")");switch(c){case "findExtensions":var e=b.map(function(a){return{version:a.version,capabilities:a.getCapabilities()}});return Promise.resolve(e);case "startup":e=b.filter(function(e){return e.version==a.version})[0];if(!e)return Promise.reject(Error("No extension found for version '"+a.version+"'"));this.handler=new e({url:this.url});return this.handler.handleMessage(c,a);default:if(!this.handler)return console.error("MessageListener",
this," doesn't have a handler"),Promise.reject(Error("This page is not initialized"));e=this.handler.handleMessage(c,a);"shutdown"==c&&(console.debug("Deleting handlerMap[",this.handler,"]"),delete this.handler);return e}},onDetach:function(){this.handler&&this.__handleMessage("shutdown",{})}}})();
(function(){var b=function(a){this.tag=a},d=function(a,e){e||(e=a);return function(){for(var c=[this.tag+"."+a],f=0;f<arguments.length;f++)c[f+1]=arguments[f];return console[e].apply(console,c)}};b.prototype.debug=d("debug","log");b.prototype.info=d("info");b.prototype.warning=d("warning","warn");b.prototype.error=d("error");var c=new b("v1"),b=function(a){c.debug("+V1Extension()");this.config=a||{};this.broker=new pkiClientExtension.Broker};b.version=1;b.getCapabilities=function(){c.debug("V1Extension.getCapabilities");
return{REMOTE_REVERSE_SERVER:!0,LOCAL_ASYNC_TBCALL:!0}};d=function(a,e){return this.broker.sendReceive(a,e)};b.prototype={messageHandlers:{bootstrap:function(a,e){var b=this;c.debug("bootstrapping...",e);return b.broker.launch(e).then(function(a){c.debug("broker.launch returned",a);c.debug("sending bootstrap to broker...");return b.broker.sendReceive("bootstrap",{allowUser:e.allowUser||!1,versionSelector:e.versionSelector})}).then(function(a){if(a=b.config&&b.config.url)return b.broker.sendReceive("setTrustedURL",
[a])}).then(function(a){a="UNLCK:"+(new Date).getTime().toString(16)+":"+Math.random();return b.broker.sendReceive("enterClientMode",[a])}).then(function(a){c.debug("Successfully bootstrapped",a);return a})["catch"](function(a){c.error("Error negotiating bootstrap",a);throw a;})},brokerChannelInit:d,clientMessages:d,setTrustedURL:d,enterClientMode:d,leaveClientMode:d,startup:function(a,e){c.debug("v1.startup()");return Promise.resolve({})},shutdown:function(a,e){c.debug("v1.shutdown()");this.broker.shutdown&&
this.broker.shutdown();return Promise.resolve({})}},handleMessage:function(a,e){c.debug("v1 is handling method=",a,"params=",e);var b=this.messageHandlers[a];return b?b.call(this,a,e):Promise.reject(Error("The message ID '"+a+"' is not supported by this messenger"))}};pkiClientExtension.handlers.push(b)})();
(function(){var b=function(a){this.tag=a},d=function(a,e){e||(e=a);return function(){for(var b=[this.tag+"."+a],c=0;c<arguments.length;c++)b[c+1]=arguments[c];return console[e].apply(console,b)}};b.prototype.debug=d("debug","log");b.prototype.info=d("info");b.prototype.warning=d("warning","warn");b.prototype.error=d("error");var c=new b("v2"),b=function(a){c.debug("+V2Extension()");this.config=a||{};this.broker=new pkiClientExtension.Broker};b.version=2;b.getCapabilities=function(){c.debug("V2Extension.getCapabilities");
return{LOCAL_ASYNC_TBCALL:!0,LOCAL_FLAVOR_CONFIG:!0}};d=function(a,b){return this.broker.sendReceive(a,b)};b.prototype={messageHandlers:{bootstrap:function(a,b){var d=this;c.debug("bootstrapping...",b);return d.broker.launch(b).then(function(a){c.debug("broker.launch returned",a);c.debug("sending bootstrap to broker...");return d.broker.sendReceive("bootstrap",{allowUser:b.allowUser||!1,versionSelector:b.versionSelector,flavor:b.flavor})}).then(function(a){if(a=d.config&&d.config.url)return d.broker.sendReceive("setTrustedURL",
[a])}).then(function(a){a="UNLCK:"+(new Date).getTime().toString(16)+":"+Math.random();return d.broker.sendReceive("enterClientMode",[a])}).then(function(a){c.debug("Successfully bootstrapped",a);return a})["catch"](function(a){c.error("Error negotiating bootstrap",a);throw a;})},brokerChannelInit:d,clientMessages:d,setTrustedURL:d,enterClientMode:d,leaveClientMode:d,startup:function(a,b){c.debug("v2.startup()");return Promise.resolve({})},shutdown:function(a,b){c.debug("v2.shutdown()");this.broker.shutdown&&
this.broker.shutdown();return Promise.resolve({})}},handleMessage:function(a,b){c.debug("v2 is handling method=",a,"params=",b);var d=this.messageHandlers[a];return d?d.call(this,a,b):Promise.reject(Error("The message ID '"+a+"' is not supported by this messenger"))}};pkiClientExtension.handlers.push(b)})();
